packages: 
    yum:
        nginx: []
        php54-fpm: []
        telnet: []
        curl: []
        php54-pecl-apc: []
        php54-cli: []
        php54-devel: []

files:
    "/opt/elasticbeanstalk/hooks/appdeploy/enact/zzzzz_loadnewservice.sh" :
        mode: "000777"
        owner: root
        group: root
        content: |
            #!/usr/bin/env bash
            . /opt/elasticbeanstalk/support/envvars
            service httpd stop
            service nginx restart
            service php-fpm restart
            
    "/etc/nginx/nginx.conf" :
        mode: "000644"
        owner: root
        group: root
        content: |
            user webapp; # Needed for permissions
            pid /var/run/nginx.pid;
            worker_processes 4; # Match number of cores
            worker_rlimit_nofile 200000;
            
            # error_log /var/log/nginx/nginx-error.log error;
            
            events {
                worker_connections 19000;
                use epoll;
                multi_accept on;
            }
            
            http {
                access_log off;
            
                open_file_cache max=200000 inactive=20s; 
                open_file_cache_valid 30s; 
                open_file_cache_min_uses 2;
                open_file_cache_errors on;
            
                keepalive_timeout 15 5;
                keepalive_requests 5000;
                reset_timedout_connection on;
                client_body_timeout 10;
                send_timeout 20;
            
                port_in_redirect off;
                server_tokens off; # Remove version info
                tcp_nodelay on;
                tcp_nopush on;
                sendfile on;
            
                gzip on;
                gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript text/x-js;
                gzip_comp_level 6;
                gzip_proxied any;
                gzip_vary on;
            
                include /etc/nginx/conf.d/*.conf;
                include mime.types;
                default_type application/octet-stream;
            }

    "/etc/nginx/conf.d/webapp.conf" :
        mode: "000644"
        owner: root
        group: root
        content: |
            server {
                listen 80;
                server_name _;
                root /var/www/html/public;
                index index.php;
            
                # No logs, to avoid filling the instance disk
                # log_not_found off;
                # access_log on;
                access_log /var/log/httpd/access_log;
                error_log /var/log/httpd/error_log;
            
                # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
                location ~ /\. {
                    deny all;
                }
                
                # Example of "mod_rewrite" for use with a framework or wordpress or others.
                location / {
                    try_files $uri $uri/ /index.php?$args;
                }
            
                # Tell browser to cache image files for 24 hours, do not log missing images
                # I typically keep this after the yii rules, so that there is no conflict with content served by Yii
                location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
                    expires 24h;
                }
            
                # Block for processing PHP files
                # Specifically matches URIs ending in .php
                location ~ \.php$ {
                    try_files $uri =404;
            
                    # Fix for server variables that behave differently under nginx/php-fpm than typically expected
                    fastcgi_split_path_info ^(.+\.php)(/.+)$;
                    # Include the standard fastcgi_params file included with nginx
                    include fastcgi_params;
                    fastcgi_param  PATH_INFO        $fastcgi_path_info;
                    fastcgi_index index.php;
                    # Override the SCRIPT_FILENAME variable set by fastcgi_params
                    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
                    # Pass to upstream PHP-FPM; This must match whatever you name your upstream connection
                    fastcgi_pass unix:/var/run/php-fpm/php-fpm.sock; # Using socket, faster
                    
                }
                # ban all folders start with "_"
                location ~ ^/_(.*) {
                        deny  all;
                        return 404;
                }
                # ban folders "uploads"
                location ~ ^/uploads {
                        deny  all;
                        return 404;
                }
            }
    "/etc/php-fpm.d/www.conf" :
        mode: "000644"
        owner: root
        group: root
        content: |
            [www]
            listen = /var/run/php-fpm/php-fpm.sock
            listen.allowed_clients = 127.0.0.1
            
            ; Need to set owner/group for valid permissions
            listen.owner = webapp
            listen.group = webapp
            user = webapp
            group = webapp
            
            ; Child processes
            pm = dynamic
            pm.max_children = 100
            pm.start_servers = 10
            pm.min_spare_servers = 10
            pm.max_spare_servers = 50
            pm.max_requests = 500
            
            ; Timeouts
            request_terminate_timeout = 60
            request_slowlog_timeout = 5s
            slowlog = /var/log/nginx/fpm-slow.log
            
            ; Environment variables
            env[HOSTNAME] = $HOSTNAME
            env[TMP] = /tmp
            env[TMPDIR] = /tmp
            env[TEMP] = /tmp
            
            ; PHP settings
            php_admin_value[error_log] = /var/log/nginx/php-error.log
            php_admin_flag[log_errors] = on

commands:
  05retart: 
    command: /etc/init.d/httpd stop ; /etc/init.d/nginx restart 
    cwd: /tmp

container_commands:
  01restart:
    command: service httpd stop ; service nginx start 
    cwd: /tmp

## put your services here
services:
  sysvinit:
    php-fpm:
      enabled: true
      ensureRunning: true
    nginx:
      enabled: true
      ensureRunning: true

#TODO: Make Dynamic config about GZIP using enviroment
#TODO: Make dynaic config about server root using EB_CONFIG_DOCUMENT_ROOT
